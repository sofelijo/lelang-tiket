generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wilayah {
  kode  String @id @db.VarChar(13)
  nama  String @db.VarChar(100)
  users User[] @relation("WilayahUsers")

  @@map("wilayah")
}

  model User {
    id            Int          @id @default(autoincrement())
    name          String?
    email         String?      @unique
    password      String?
    phoneNumber   String?      @unique
    isVerified    Boolean      @default(false)
    role          Role         @default(USER)
    username      String       @unique
    image         String?
    bio           String?
    namaBank      String?
    rekeningBank  String?
    wilayahId     String?
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    bids          Bid[]
    Comment       Comment[]
    pembayaran    Pembayaran[]
    ticketsMenang Ticket[]     @relation("TicketPemenang")
    tickets       Ticket[]
    wilayah       Wilayah?     @relation("WilayahUsers", fields: [wilayahId], references: [kode])

    OtpLogin OtpLogin[]

    Notifikasi Notifikasi[]
  }

model Konser {
  id             Int              @id @default(autoincrement())
  nama           String
  lokasi         String
  tanggal        DateTime
  venue          String?
  image         String?
  Comment        Comment[]
  konserKategori KonserKategori[]
  tiket          Ticket[]
}
// prisma/schema.prisma
model OtpLogin {
  id        Int      @id @default(autoincrement())
  phone     String
  code      String
  createdAt DateTime @default(now())
  isUsed    Boolean  @default(false)
  expiresAt DateTime
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
}

model Kategori {
  id             Int              @id @default(autoincrement())
  nama           String
  konserKategori KonserKategori[]
  tickets        Ticket[]         @relation("KategoriToTicket")
}

model Ticket {
  id               Int              @id @default(autoincrement())
  seat             String?
  tipeTempat       String
  harga_awal       Int?
  harga_beli       Int?
  kelipatan        Int?
  batas_waktu      DateTime?
  deskripsi        String?
  perpanjangan_bid PerpanjanganBid?
  userId           Int?
  konserId         Int
  kategoriId       Int
  jumlah           Int              @default(1)
  statusLelang     StatusLelang     @default(BERLANGSUNG)
  sebelahan        Boolean?
  pemenangId       Int?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  bids             Bid[]
  Comment          Comment[]
  pembayaran       Pembayaran[]
  kategori         Kategori         @relation("KategoriToTicket", fields: [kategoriId], references: [id])
  konser           Konser           @relation(fields: [konserId], references: [id])
  pemenang         User?            @relation("TicketPemenang", fields: [pemenangId], references: [id])
  user             User?            @relation(fields: [userId], references: [id])
}

model Bid {
  id        Int      @id @default(autoincrement())
  amount    Int
  ticketId  Int
  userId    Int
  createdAt DateTime @default(now())
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Pembayaran {
  id                       Int              @id @default(autoincrement())
  order_id                 String?
  ticketId                 Int
  buyerId                  Int
  snapMethod                   String?
  feeMetode                Int?
  feeMetodeFlat             Int?
  jumlahTotal             Int
  kodeUnik                 Int?
  feePlatform              Int
  hargaTiket Int? // diisi saat create pembayaran (hasil final, udah dihitung backend)

  statusPembayaran         StatusPembayaran @default(PENDING)
  tanggalTransferKePenjual DateTime?
  createdAt                DateTime         @default(now())
  updatedAt                DateTime         @updatedAt
  buktiPembayaran          String?
  snapToken String? // menyimpan token Snap Midtrans

    currentStep      Int      @default(1)
  qrisExpiredAt            DateTime?
  buyer                    User             @relation(fields: [buyerId], references: [id])
  ticket                   Ticket           @relation(fields: [ticketId], references: [id])

  @@index([ticketId, buyerId])
}

//metodePembayaran         MetodePembayaran
//metodePembayaranManual   MetodePembayaranManual? @relation(fields: [metodePembayaranManualId], references: [id])

model KonserKategori {
  id         Int      @id @default(autoincrement())
  konserId   Int
  kategoriId Int
  kategori   Kategori @relation(fields: [kategoriId], references: [id])
  konser     Konser   @relation(fields: [konserId], references: [id])

  @@unique([konserId, kategoriId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int
  konserId  Int?
  ticketId  Int?
  konser    Konser?  @relation(fields: [konserId], references: [id])
  ticket    Ticket?  @relation(fields: [ticketId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model MetodePembayaranManual {
  id        Int      @id @default(autoincrement())
  rekening  String?
  deskripsi String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image     String?
  nama      String
}

enum StatusLelang {
  BOOKED
  PENDING
  BERLANGSUNG
  SELESAI
}

enum PerpanjanganBid {
  TANPA
  DUA_HARI
  SATU_HARI
}

enum Role {
  USER
  ADMIN
}

enum StatusPembayaran {
  PENDING
  DIPROSES
  BERHASIL
  GAGAL
  REFUND
}

enum MetodePembayaran {
  TRANSFER
  QRIS_DINAMIS
  MIDTRANS
}


model Notifikasi {
  id        String   @id @default(cuid())           // ID notifikasi tetap pakai CUID biar gak urutan
  userId    Int                                     // Int untuk relasi ke User
  user      User     @relation(fields: [userId], references: [id])
  pesan     String                                 // Isi pesan notif (bebas)
  link      String                                 // Link tujuan saat diklik (contoh: "/ticket/123")
  isRead    Boolean  @default(false)                // Penanda sudah dibaca
  createdAt DateTime @default(now())                // Tanggal buat notif
}


model Banner {
  id          Int      @id @default(autoincrement())
  title       String
  imageUrl    String
  link        String?     // Link tujuan saat banner diklik
  isActive    Boolean  @default(true)
  urutan      Int      @default(0)
  startDate   DateTime?   // Kapan mulai tampil (opsional)
  endDate     DateTime?   // Kapan selesai tampil (opsional)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
